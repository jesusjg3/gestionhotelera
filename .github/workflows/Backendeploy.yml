name: Deploy Laravel backend via SSH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Preparar SSH hacia el servidor
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Preparar carpeta SSH y known_hosts
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/known_hosts

      - name: Debug SSH folder
        run: |
          ls -la ~/.ssh
          cat ~/.ssh/known_hosts || echo "known_hosts vacío"

      - name: Agregar host remoto a known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts || true

      - name: Prueba conexión SSH
        run: |
          ssh -v ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "echo conexión exitosa"

      - name: Verificar WORK_DIR en el servidor remoto
        run: |
          ssh -o StrictHostKeyChecking=accept-new -v ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "if [ ! -d '${{ secrets.WORK_DIR }}' ]; then echo 'WORK_DIR no existe'; exit 1; fi"

      - name: Desplegar en el servidor remoto
        run: |
          ssh -o StrictHostKeyChecking=accept-new -v ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} bash -l -c '
            set -e
            cd "${{ secrets.WORK_DIR }}" || { echo "No se puede acceder a WORK_DIR"; exit 1; }
            if [ ! -d .git ]; then
              git clone --branch "main" https://github.com/jesusjg3/gestionhotelera.git . || { echo "Error en git clone"; exit 1; }
            else
              git fetch origin || { echo "Error en git fetch"; exit 1; }
              git reset --hard origin/"main" || { echo "Error en git reset"; exit 1; }
            fi
            composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction || { echo "Error en composer install"; exit 1; }
            php artisan migrate --force || { echo "Error en artisan migrate"; exit 1; }
            php artisan config:cache || { echo "Error en config:cache"; exit 1; }
            php artisan route:cache || { echo "Error en route:cache"; exit 1; }
            php artisan view:cache || { echo "Error en view:cache"; exit 1; }
          '
